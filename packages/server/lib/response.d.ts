import * as send from 'send';
import { Buffer } from 'safe-buffer';
import * as http from 'node:http';
import * as http2 from 'node:http2';
import { CookieOptions } from '../interfaces';
import { IRespose } from '@cmmv/server-common';
import { ServerApplication } from './application';
export declare class Response implements IRespose {
    readonly app: ServerApplication;
    readonly req: http.IncomingMessage | http2.Http2ServerRequest;
    readonly res: http.ServerResponse | http2.Http2ServerResponse;
    buffer: Buffer;
    statusCode: number;
    accept: any;
    headers: any;
    sended: boolean;
    uuid: string;
    constructor(app: ServerApplication, req: http.IncomingMessage | http2.Http2ServerRequest, res: http.ServerResponse | http2.Http2ServerResponse);
    get httpResponse(): http.ServerResponse<http.IncomingMessage> | http2.Http2ServerResponse;
    append(appendName: string, value: any): void;
    attachment(contentType?: string): void;
    cookie(name: string, value: string, options?: CookieOptions): void;
    clearCookie(name: string, options?: CookieOptions): void;
    download(path: string, filename?: string): void;
    end(data?: string, encoding?: string): void;
    format(object: Object): void;
    get(headerName: string): string;
    json(body?: any): void;
    jsonp(body?: any): void;
    links(links?: Object): void;
    location(path: string): void;
    redirect(pathOrStatus: string | number, path?: string): void;
    render(view: string, locals?: any, callback?: (err: any, html: string) => void): void;
    send(body?: string | Object | Buffer): void;
    sendFile(path: string, options?: send.SendOptions, fn?: (err: any) => void): void;
    sendStatus(statusCode: number): Response;
    set(field: string | Object, value?: string): Response;
    header(field: string, value?: string): Response;
    setHeader(field: string, value?: string): Response;
    remove(field: string): Response;
    removeHeader(field: string): Response;
    status(code: number): Response;
    type(type: string): Response;
    vary(field: string): Response;
}
